#include <Arduino.h>
#include <WiFi.h>
#include <AsyncTCP.h>
#include <ESPAsyncWebServer.h>
#include <Preferences.h>
#include "Stepper_28BYJ_48.h"

Preferences pref;

Stepper_28BYJ_48 stepper(0,4,16,17);

AsyncWebServer server(80);

const int garageBlueLed = 26;
const int garageWhiteLed = 25;
const int irOutside = 23;
const int irInside = 22;

const char* ssid = "RonGods" ;
const char* password = "spiderron";

const char* PARAM_SWITCH = "switch";

bool whiteLeds, poolLeds, moving1, moving2, fullyOpened, fullyClosed;

int openGarage2, lastGarage2;

int prev[2], curr[2];

unsigned long tOpened;

bool detected, stayed, entered;

unsigned long t0, t1, t2;

void Garage2(void * param){
  while(1){
    if(openGarage2 == 1){
      Serial.println("Opening...");
      if (!moving2){            
        moving2 = true;
        fullyClosed = false;
        Serial.println("Moving...");
        stepper.step(650);
        Serial.println("Done Moving");
        fullyOpened = true;
        moving2 = false;
        tOpened = millis();
      }
      lastGarage2 = openGarage2;
      pref.putInt("GarageDoor2", openGarage2);
      openGarage2 = 0;
    } else if(openGarage2 == 2) {
      Serial.println("Closing...");
      if (!moving2){
        moving2 = true;
        fullyOpened = false;
        Serial.println("Moving...");    
        stepper.step(-650);
        Serial.println("Done Moving");
        fullyClosed = true;
        moving2 = false;        
      }
      lastGarage2 = openGarage2;
      pref.putInt("GarageDoor2", openGarage2);
      openGarage2 = 0;
    }
    delay(10);
  }
}

void setup(){
  Serial.begin(115200);  
  pinMode(garageWhiteLed, OUTPUT);
  pinMode(garageBlueLed, OUTPUT);
  
  xTaskCreatePinnedToCore(
    Garage2,
    "Garage 2",
    10000,
    NULL,
    1,
    NULL,
    1
  );

  WiFi.begin(ssid, password);
  if (WiFi.waitForConnectResult() != WL_CONNECTED) {
      Serial.printf("WiFi Failed!\n");
      return;
  }

  server.on("/garage", HTTP_GET, 
    [] (AsyncWebServerRequest *request) {
      String num;
      // GET input1 value on <ESP_IP>/led?num=<num>
      if (request->hasParam(PARAM_SWITCH) ) {
        num = request->getParam(PARAM_SWITCH)->value();        
        Serial.println(num);
        if (num == "1on"){  
          digitalWrite(garageWhiteLed, HIGH);
        } else if (num == "1off"){
          digitalWrite(garageWhiteLed, LOW);
        } else if (num == "2on"){
          digitalWrite(garageBlueLed, HIGH);  
        } else if (num == "2off"){
          digitalWrite(garageBlueLed, LOW);  
        } else if (num == "3on"){ 
          if(lastGarage2 != 1){
            openGarage2 = 1;
          }
        } else if (num == "3off"){
          if(lastGarage2 != 2){
            openGarage2 = 2;
          }
        }  else if (num == "allon"){
          digitalWrite(garageBlueLed, HIGH);
          digitalWrite(garageWhiteLed, HIGH);  
        } else if (num == "alloff"){
          digitalWrite(garageBlueLed, LOW);  
          digitalWrite(garageWhiteLed, LOW);
        }
      } else {
        num = "No message sent";
      }
      request->send(200, "text/plain", num);
    }
  );
  Serial.println(WiFi.localIP());
  server.begin();
}

void loop(){
  for (int i = 0; i < 2; i++){
    prev[i] = curr[i];
  }
    
  curr[0] = digitalRead(irOutside);
  curr[1] = digitalRead(irInside);

  // Serial.printf("prev[0]= %d curr[0]= %d ", prev[0], curr[0]);
  // Serial.printf("prev[1]= %d curr[1]= %d\n", prev[1], curr[1]);

  if (curr[0] == 0 && prev[0] == 1){
    Serial.printf("%d %d %d %d ",detected,stayed,entered,lastGarage2!=1);
    if(!detected && !stayed && !entered && lastGarage2 != 1){
      Serial.println("Detected");
      detected = true;
      t0 = millis();        
    }
  } else if(curr[0] == 0 && prev[0] == 0){
    if(lastGarage2 != 1 && detected ){
      if(millis() - t0 >= 1900){
        Serial.println("Stayed");
        stayed = true;
        openGarage2 = 1;
        t0 = 0;     
        digitalWrite(garageWhiteLed, HIGH);
        digitalWrite(garageBlueLed, HIGH);   
      }
    }
  }
  if (curr[1] == 0 && prev[1] == 1){
    Serial.printf("%d %d %d %d ",fullyOpened,(lastGarage2 == 1),stayed,detected);
    Serial.println(millis() - tOpened >= 1500);
    if(fullyOpened && (lastGarage2 == 1) && stayed && detected){
      if(millis() - tOpened >= 1500){ 
        Serial.println("Entered");         
        detected = false;   
        entered = true;       
      }
    }
  } else if(curr[1] == 1 && prev[1] == 0){
    if(entered && !detected){
      Serial.println("...");
      openGarage2 = 2;
      entered = false;
      detected = false;
      stayed = false;
    }
  }
  if(curr[1] == 1 && prev[1] == 1){
    if(fullyOpened && lastGarage2 == 1 && stayed && !entered){
      if(millis() - tOpened >= 4000){
      Serial.println("No Activity");
      openGarage2 = 2;
      detected = false;
      stayed = false;
      entered = false;
      tOpened = 0;
      }
    }
  }
  
  if(detected && !stayed && !entered && lastGarage2 != 1){
    if (millis() - t0 >= 2200){
      Serial.println("detection timeout");
      detected = false;
      t0 = millis();
    }
  }
  delay(10);
}