#include <Arduino.h>
#include <AsyncTCP.h>
#include <ESPAsyncWebServer.h>
// #include <Adafruit_MPU6050.h>
#include <WiFi.h>
#include <WiFiSTA.h>

#include <USB.h>
#include <USBHIDKeyboard.h>
#include <USBHIDMouse.h>
#include <USBHIDSystemControl.h>

const char* ssid = "al";
const char* password = "@3231Zabala";

AsyncWebServer server(80);

const char* PARAM_M = "move";
const char* PARAM_K = "type";
const char* PARAM_S = "s";

USBHIDSystemControl SystemControl;
USBHIDKeyboard Keyboard;
USBHIDMouse Mouse;

bool left1, right1, up1, down1;

void notFound(AsyncWebServerRequest *request) {
    request->send(404, "text/plain", "Not found");
}

void setup() {
  // put your setup code here, to run once:
   Serial.begin(115200);  

  
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  if (WiFi.waitForConnectResult() != WL_CONNECTED) {
      Serial.printf("WiFi Failed!\n");
      return;
  }

  SystemControl.begin();
  Mouse.begin();
  Keyboard.begin();
  USB.begin();
  server.on("/m", HTTP_GET, [] (AsyncWebServerRequest *request) {
    String move;
    if (request->hasParam(PARAM_M)) {
      move = request->getParam(PARAM_M)->value();
      Serial.println(move);
      if(move == "left") {
        Mouse.move(-5, 0);
      } else if(move == "left2"){
        left1 = false;
      } else if(move == "right2"){
        right1 = false;
      } else if(move == "left1"){
        left1 = true;
      } else if(move == "right1"){
        right1 = true;
      } else if(move == "right"){
        Mouse.move(5, 0);
      } else if(move == "up") {
        Mouse.move(0,-5);
      } else if(move == "down") {
        Mouse.move(0, 5);
      } else if(move == "up2"){
        up1 = false;
      } else if(move == "down2"){
        down1 = false;
      } else if(move == "up1"){
        up1 = true;
      } else if(move == "down1"){
        down1 = true;
      } else if(move == "click") {
        Mouse.press(MOUSE_LEFT);
        Mouse.release(MOUSE_LEFT);
      } 
    }          
  });

  server.on("/k", HTTP_GET, [] (AsyncWebServerRequest *request) {
    String type;
    if (request->hasParam(PARAM_K)) {
      type = request->getParam(PARAM_K)->value();
      Serial.println(type);
      Keyboard.print(type);
    }              
  });
  
  server.on("/s", HTTP_GET, [] (AsyncWebServerRequest *request) {
    String s;
    if (request->hasParam(PARAM_S)) {
      s = request->getParam(PARAM_S)->value();
      Serial.println(s);
      if (s == "true"){
        SystemControl.press(SYSTEM_CONTROL_POWER_OFF);
        SystemControl.release();
      } else if (s == "word"){
        Keyboard.press(KEY_LEFT_GUI);  
        Keyboard.press('r');  
        delay(100);
        Keyboard.releaseAll();
        Keyboard.print("winword.exe");          
        Keyboard.press(KEY_RETURN);  
        delay(10);
        Keyboard.releaseAll();
      }  else if (s == "edge"){
        Keyboard.press(KEY_LEFT_GUI);  
        Keyboard.press('r');  
        delay(100);
        Keyboard.releaseAll();
        Keyboard.print("msedge.exe");          
        Keyboard.press(KEY_RETURN);  
        delay(10);
        Keyboard.releaseAll();
      } else if (s == "explorer"){
        Keyboard.press(KEY_LEFT_GUI);  
        Keyboard.press('r');  
        delay(100);
        Keyboard.releaseAll();
        Keyboard.print("explorer");          
        Keyboard.press(KEY_RETURN); 
        delay(10);
        Keyboard.releaseAll(); 
      } else if (s == "close"){
        Mouse.press(MOUSE_LEFT);
        Mouse.release(MOUSE_LEFT);
        delay(10);
        Keyboard.press(KEY_LEFT_ALT);  
        Keyboard.press(KEY_F4);  
        delay(10);
        Keyboard.releaseAll();
      }
    }              
  });
  server.onNotFound(notFound);
  server.begin();

  delay(1000);
  
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());
}

void loop() {
  // put your main code here, to run repeatedly:
  if (left1){
    Mouse.move(-5, 0);
  } else if (right1){
    Mouse.move(5, 0);
  } else if (up1){
    Mouse.move(0, -5);
  } else if (down1){
    Mouse.move(0, 5);
  }
  delay(30);
}

